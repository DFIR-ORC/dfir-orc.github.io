Configuring Console Output, Logging
-----------------------------------

Tools default console output is sent to the default output console (CONOUT$).
It can be configured to log into a file, output verbose logs, or print information to an attached debugger console.
These modes are configured using the optional statements:

* Log to a file

    .. code:: xml
        
        <logging file="<path to file>"/>
    
    ::

        /logfile=<path to file>"
    
    default: None

* Console output

    .. code:: xml
    
        <logging noconsole=""/>
        
    ::
        /noconsole
    
    default: Console output is enabled

* Verbose output

    .. code:: xml
    
        <logging verbose=""/>
    
    ::

        /verbose
    
    default: Verbose logging is disabled

* Debug log level

    .. code::

        <logging debug=""/>
    
    ::
    
        /debug
    
    default: Debug logging is disabled

Examples:

.. code:: bat
    
    NTFSInfo.exe /noconsole /debug /logfile=c:\temp\ntfsinfo.log 

will not output anything to the console (quiet mode), log information directly into an attached debugger and create c:\temp\ntfsinfo.log containing the console output.

The equivalent XML syntax is:

.. code:: xml

    <logging file="c:\temp\ntfsinfo.log" noconsole="" debug="" />


Debug Mode 
``````````

The debug mode will also add debug related traces like source file name and line number where the output is logged.
Example of debug logging:

::

    [NTFSInfo_Output.cpp:86] Orc.Exe Version 10.0
    [NTFSInfo_Output.cpp:87] Start time: 10/08/2019 12:47:50.159 (UTC)
    [NTFSInfo_Output.cpp:89] Walker used  : MFT
    [NTFSInfo_Output.cpp:90] Output file  : NTFSInfo.csv
    [NTFSInfo_Output.cpp:94]


Log file
````````

The log file will be created if it does not exist or truncated if it does. 
The containing folder must exist and be writeable (or no logging is performed).
The logging will only be written to the file every 1048576 bytes (or 1MB) and at the end of the tool’s execution.
This implies that tool’s progress cannot be followed from log file using “tail –f” tools.
Console output is logged immediately.

